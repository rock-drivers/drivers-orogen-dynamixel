name "dynamixel"

using_library "dynamixel"

task_context "Task" do
    needs_configuration

    property("device", "/std/string").
        doc "the device file used to connect to the RS485 bus"

    property("servo_id", "int").
        doc "the dynamixel id off the tilt angle"

    property("cw_slope", "int", 32).
        doc "the dynamixel slope A (see RX-28 manual)"

    property("cw_margin", "int", 1).
        doc "the dynamixel margin B (see RX-28 manual)"

    property("ccw_margin", "int",1).
        doc "the dynamixel margin C (see RX-28 manual)"

    property("ccw_slope", "int",32).
        doc "the dynamixel slope D (see RX-28 manual)"

    property("punch", "int",32).
        doc "the dynamixel punch E (see RX-28 manual)"

    property("angle_to_servo_offset", "double", 0.0).
        doc "zero offset for angle (in radians) to servo position relationship"

    property("angle_to_servo_factor", "double", 195.0).
        doc "slope for angle (in radians) to servo position relationship"

    output_port('angle', 'double').
	doc "current tilt angle of the servo, in radians"

    input_port('cmd_angle', 'double').
	doc "wanted tilt angle of the servo, in radians"

    operation("setAngle").
        returns('bool').
        argument("angle", "double", "set the angle of the scanner tilt servo, in radians")

    default_activity :periodic, 0.01

    fatal_states :IO_ERROR
end

using_task_library "logger"
deployment "test" do
    do_not_install
    t = task("dynamixel_Task", "dynamixel::Task").
        periodic(0.01)

    add_default_logger

    if !corba_enabled?
        browse t
    end
end

